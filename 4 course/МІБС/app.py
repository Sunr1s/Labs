import matplotlib.pyplot as plt
import networkx as nx

# Створюємо граф
G = nx.Graph()

# Додаємо вузли для функціональних вимог
functional_requirements = [
    'Віртуальні тури',
    'Інтерактивні карти',
    'Онлайн-консультації',
    'Відгуки та оцінки',
    'Інтеграція з соц. мережами'
]

# Додаємо вузли для нефункціональних вимог
non_functional_requirements = [
    'Простота користування',
    'Надійність та стабільність',
    'Мобільна адаптація',
    'Висока продуктивність',
    'Безпека даних користувачів'
]

# Додаємо вузли до графа
G.add_nodes_from(functional_requirements, color='blue')
G.add_nodes_from(non_functional_requirements, color='red')

# Додаємо зв'язки між вузлами (для прикладу, зв'язки є довільними)
G.add_edges_from([
    ('Віртуальні тури', 'Простота користування'),
    ('Інтерактивні карти', 'Мобільна адаптація'),
    ('Онлайн-консультації', 'Надійність та стабільність'),
    ('Відгуки та оцінки', 'Безпека даних користувачів'),
    ('Інтеграція з соц. мережами', 'Висока продуктивність'),
])

# Візуалізуємо граф знову, переконавшись, що зв'язки відображаються правильно
plt.figure(figsize=(10, 6))
pos = nx.spring_layout(G, seed=42)  # Визначаємо позицію вузлів з фіксованим seed для стабільності розташування
nx.draw_networkx_nodes(G, pos, cmap=plt.get_cmap('jet'), node_color='skyblue', node_size=2000)
nx.draw_networkx_labels(G, pos)
nx.draw_networkx_edges(G, pos, edge_color='black', width=2)  # Збільшуємо товщину ліній для кращої видимості
plt.title('Оновлена Концептуальна Карта Вимог')
plt.show()
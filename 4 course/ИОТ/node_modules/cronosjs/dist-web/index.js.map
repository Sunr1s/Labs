{"version":3,"file":"index.js","sources":["../dist-src/utils.js","../dist-src/parser.js","../dist-src/date.js","../dist-src/expression.js","../dist-src/scheduler.js","../dist-src/index.js"],"sourcesContent":["export const sortAsc = (a, b) => a - b;\r\nexport function flatMap(arr, mapper) {\r\n    return arr.reduce((acc, val, i) => {\r\n        acc.push(...mapper(val, i, arr));\r\n        return acc;\r\n    }, []);\r\n}\r\n","import { sortAsc, flatMap } from './utils';\r\nconst predefinedCronStrings = {\r\n    '@yearly': '0 0 0 1 1 * *',\r\n    '@annually': '0 0 0 1 1 * *',\r\n    '@monthly': '0 0 0 1 * * *',\r\n    '@weekly': '0 0 0 * * 0 *',\r\n    '@daily': '0 0 0 * * * *',\r\n    '@midnight': '0 0 0 * * * *',\r\n    '@hourly': '0 0 * * * * *',\r\n};\r\nconst monthReplacements = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\r\nconst monthReplacementRegex = new RegExp(monthReplacements.join('|'), 'g');\r\nconst dayOfWeekReplacements = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\r\nconst dayOfWeekReplacementRegex = new RegExp(dayOfWeekReplacements.join('|'), 'g');\r\n/*\r\n\"The actual range of times supported by ECMAScript Date objects is slightly smaller:\r\n  exactly â€“100,000,000 days to 100,000,000 days measured relative to midnight at the\r\n  beginning of 01 January, 1970 UTC. This gives a range of 8,640,000,000,000,000\r\n  milliseconds to either side of 01 January, 1970 UTC.\"\r\nhttp://ecma-international.org/ecma-262/5.1/#sec-15.9.1.1\r\n\r\nnew Date(8640000000000000) => 00:00:00 13th Sep 275760\r\nLargest full year valid as JS date = 275759\r\n*/\r\nconst maxValidYear = 275759;\r\nexport var WarningType;\r\n(function (WarningType) {\r\n    WarningType[\"IncrementLargerThanRange\"] = \"IncrementLargerThanRange\";\r\n})(WarningType || (WarningType = {}));\r\nexport function _parse(cronstring) {\r\n    let expr = cronstring.trim().toLowerCase();\r\n    if (predefinedCronStrings[expr]) {\r\n        expr = predefinedCronStrings[expr];\r\n    }\r\n    const fields = expr.split(/\\s+/g);\r\n    if (fields.length < 5 || fields.length > 7) {\r\n        throw new Error('Expression must have at least 5 fields, and no more than 7 fields');\r\n    }\r\n    switch (fields.length) {\r\n        case 5:\r\n            fields.unshift('0');\r\n        case 6:\r\n            fields.push('*');\r\n    }\r\n    return [\r\n        new SecondsOrMinutesField(fields[0]),\r\n        new SecondsOrMinutesField(fields[1]),\r\n        new HoursField(fields[2]),\r\n        new DaysField(fields[3], fields[5]),\r\n        new MonthsField(fields[4]),\r\n        new YearsField(fields[6])\r\n    ];\r\n}\r\nfunction getIncrementLargerThanRangeWarnings(items, first, last) {\r\n    const warnings = [];\r\n    for (let item of items) {\r\n        let rangeLength;\r\n        if (item.step > 1 &&\r\n            item.step > (rangeLength = item.rangeLength(first, last))) {\r\n            warnings.push({\r\n                type: WarningType.IncrementLargerThanRange,\r\n                message: `Increment (${item.step}) is larger than range (${rangeLength}) for expression '${item.itemString}'`\r\n            });\r\n        }\r\n    }\r\n    return warnings;\r\n}\r\nclass Field {\r\n    constructor(field) {\r\n        this.field = field;\r\n    }\r\n    parse() {\r\n        return this.field.split(',')\r\n            .map(item => FieldItem.parse(item, this.first, this.last, true));\r\n    }\r\n    get items() {\r\n        if (!this._items)\r\n            this._items = this.parse();\r\n        return this._items;\r\n    }\r\n    get values() {\r\n        return Field.getValues(this.items, this.first, this.last);\r\n    }\r\n    get warnings() {\r\n        return getIncrementLargerThanRangeWarnings(this.items, this.first, this.last);\r\n    }\r\n    static getValues(items, first, last) {\r\n        return Array.from(new Set(flatMap(items, item => item.values(first, last)))).sort(sortAsc);\r\n    }\r\n}\r\nclass FieldItem {\r\n    constructor(itemString) {\r\n        this.itemString = itemString;\r\n        this.step = 1;\r\n    }\r\n    rangeLength(first, last) {\r\n        var _a, _b, _c, _d;\r\n        const start = (_b = (_a = this.range) === null || _a === void 0 ? void 0 : _a.from) !== null && _b !== void 0 ? _b : first, end = (_d = (_c = this.range) === null || _c === void 0 ? void 0 : _c.to) !== null && _d !== void 0 ? _d : last;\r\n        return (end < start) ? ((last - start) + (end - first) + 1) : (end - start);\r\n    }\r\n    values(first, last) {\r\n        const start = this.range ? this.range.from : first, rangeLength = this.rangeLength(first, last);\r\n        return Array(Math.floor(rangeLength / this.step) + 1)\r\n            .fill(0)\r\n            .map((_, i) => first + ((start - first + (this.step * i)) % (last - first + 1)));\r\n    }\r\n    get any() {\r\n        return this.range === undefined && this.step === 1;\r\n    }\r\n    get single() {\r\n        return !!this.range && this.range.from === this.range.to;\r\n    }\r\n    static parse(item, first, last, allowCyclicRange = false, transformer) {\r\n        var _a;\r\n        const fieldItem = new FieldItem(item);\r\n        const [match, all, startFrom, range, step] = ((_a = item.match(/^(?:(\\*)|([0-9]+)|([0-9]+-[0-9]+))(?:\\/([1-9][0-9]*))?$/)) !== null && _a !== void 0 ? _a : []);\r\n        if (!match)\r\n            throw new Error('Field item invalid format');\r\n        if (step) {\r\n            fieldItem.step = parseInt(step, 10);\r\n        }\r\n        if (startFrom) {\r\n            let start = parseInt(startFrom, 10);\r\n            start = transformer ? transformer(start) : start;\r\n            if (start < first || start > last)\r\n                throw new Error('Field item out of valid value range');\r\n            fieldItem.range = {\r\n                from: start,\r\n                to: step ? undefined : start\r\n            };\r\n        }\r\n        else if (range) {\r\n            const [rangeStart, rangeEnd] = range.split('-').map(x => {\r\n                const n = parseInt(x, 10);\r\n                return transformer ? transformer(n) : n;\r\n            });\r\n            if (rangeStart < first || rangeStart > last || rangeEnd < first || rangeEnd > last ||\r\n                (rangeEnd < rangeStart && !allowCyclicRange)) {\r\n                throw new Error('Field item range invalid, either value out of valid range or start greater than end in non wraparound field');\r\n            }\r\n            fieldItem.range = {\r\n                from: rangeStart,\r\n                to: rangeEnd\r\n            };\r\n        }\r\n        return fieldItem;\r\n    }\r\n}\r\nFieldItem.asterisk = new FieldItem('*');\r\nexport class SecondsOrMinutesField extends Field {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.first = 0;\r\n        this.last = 59;\r\n    }\r\n}\r\nexport class HoursField extends Field {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.first = 0;\r\n        this.last = 23;\r\n    }\r\n}\r\nexport class DaysField {\r\n    constructor(daysOfMonthField, daysOfWeekField) {\r\n        this.lastDay = false;\r\n        this.lastWeekday = false;\r\n        this.daysItems = [];\r\n        this.nearestWeekdayItems = [];\r\n        this.daysOfWeekItems = [];\r\n        this.lastDaysOfWeekItems = [];\r\n        this.nthDaysOfWeekItems = [];\r\n        for (let item of daysOfMonthField.split(',').map(s => s === '?' ? '*' : s)) {\r\n            if (item === 'l') {\r\n                this.lastDay = true;\r\n            }\r\n            else if (item === 'lw') {\r\n                this.lastWeekday = true;\r\n            }\r\n            else if (item.endsWith('w')) {\r\n                this.nearestWeekdayItems.push(FieldItem.parse(item.slice(0, -1), 1, 31));\r\n            }\r\n            else {\r\n                this.daysItems.push(FieldItem.parse(item, 1, 31));\r\n            }\r\n        }\r\n        const normalisedDaysOfWeekField = daysOfWeekField.replace(dayOfWeekReplacementRegex, match => dayOfWeekReplacements.indexOf(match) + '');\r\n        const parseDayOfWeek = (item) => FieldItem.parse(item, 0, 6, true, n => n === 7 ? 0 : n);\r\n        for (let item of normalisedDaysOfWeekField.split(',').map(s => s === '?' ? '*' : s)) {\r\n            const nthIndex = item.lastIndexOf('#');\r\n            if (item.endsWith('l')) {\r\n                this.lastDaysOfWeekItems.push(parseDayOfWeek(item.slice(0, -1)));\r\n            }\r\n            else if (nthIndex !== -1) {\r\n                const nth = item.slice(nthIndex + 1);\r\n                if (!/^[1-5]$/.test(nth))\r\n                    throw new Error('Field item nth of month (#) invalid');\r\n                this.nthDaysOfWeekItems.push({\r\n                    item: parseDayOfWeek(item.slice(0, nthIndex)),\r\n                    nth: parseInt(nth, 10)\r\n                });\r\n            }\r\n            else {\r\n                this.daysOfWeekItems.push(parseDayOfWeek(item));\r\n            }\r\n        }\r\n    }\r\n    get values() {\r\n        return DaysFieldValues.fromField(this);\r\n    }\r\n    get warnings() {\r\n        const warnings = [], dayItems = [\r\n            ...this.daysItems,\r\n            ...this.nearestWeekdayItems,\r\n        ], weekItems = [\r\n            ...this.daysOfWeekItems,\r\n            ...this.lastDaysOfWeekItems,\r\n            ...this.nthDaysOfWeekItems.map(({ item }) => item),\r\n        ];\r\n        warnings.push(...getIncrementLargerThanRangeWarnings(dayItems, 1, 31), ...getIncrementLargerThanRangeWarnings(weekItems, 0, 6));\r\n        return warnings;\r\n    }\r\n    get allDays() {\r\n        return (!this.lastDay &&\r\n            !this.lastWeekday &&\r\n            !this.nearestWeekdayItems.length &&\r\n            !this.lastDaysOfWeekItems.length &&\r\n            !this.nthDaysOfWeekItems.length &&\r\n            this.daysItems.length === 1 && this.daysItems[0].any &&\r\n            this.daysOfWeekItems.length === 1 && this.daysOfWeekItems[0].any);\r\n    }\r\n}\r\nexport class DaysFieldValues {\r\n    constructor() {\r\n        this.lastDay = false;\r\n        this.lastWeekday = false;\r\n        this.days = [];\r\n        this.nearestWeekday = [];\r\n        this.daysOfWeek = [];\r\n        this.lastDaysOfWeek = [];\r\n        this.nthDaysOfWeek = [];\r\n    }\r\n    static fromField(field) {\r\n        const values = new DaysFieldValues();\r\n        const filterAnyItems = (items) => items.filter(item => !item.any);\r\n        values.lastDay = field.lastDay;\r\n        values.lastWeekday = field.lastWeekday;\r\n        values.days = Field.getValues(field.allDays ? [FieldItem.asterisk] : filterAnyItems(field.daysItems), 1, 31);\r\n        values.nearestWeekday = Field.getValues(field.nearestWeekdayItems, 1, 31);\r\n        values.daysOfWeek = Field.getValues(filterAnyItems(field.daysOfWeekItems), 0, 6);\r\n        values.lastDaysOfWeek = Field.getValues(field.lastDaysOfWeekItems, 0, 6);\r\n        const nthDaysHashes = new Set();\r\n        for (let item of field.nthDaysOfWeekItems) {\r\n            for (let n of item.item.values(0, 6)) {\r\n                let hash = n * 10 + item.nth;\r\n                if (!nthDaysHashes.has(hash)) {\r\n                    nthDaysHashes.add(hash);\r\n                    values.nthDaysOfWeek.push([n, item.nth]);\r\n                }\r\n            }\r\n        }\r\n        return values;\r\n    }\r\n    getDays(year, month) {\r\n        const days = new Set(this.days);\r\n        const lastDateOfMonth = new Date(year, month, 0).getDate();\r\n        const firstDayOfWeek = new Date(year, month - 1, 1).getDay();\r\n        const getNearestWeekday = (day) => {\r\n            if (day > lastDateOfMonth)\r\n                day = lastDateOfMonth;\r\n            const dayOfWeek = (day + firstDayOfWeek - 1) % 7;\r\n            let weekday = day + (dayOfWeek === 0 ? 1 : (dayOfWeek === 6 ? -1 : 0));\r\n            return weekday + (weekday < 1 ? 3 : (weekday > lastDateOfMonth ? -3 : 0));\r\n        };\r\n        if (this.lastDay) {\r\n            days.add(lastDateOfMonth);\r\n        }\r\n        if (this.lastWeekday) {\r\n            days.add(getNearestWeekday(lastDateOfMonth));\r\n        }\r\n        for (const day of this.nearestWeekday) {\r\n            days.add(getNearestWeekday(day));\r\n        }\r\n        if (this.daysOfWeek.length ||\r\n            this.lastDaysOfWeek.length ||\r\n            this.nthDaysOfWeek.length) {\r\n            const daysOfWeek = Array(7).fill(0).map(() => ([]));\r\n            for (let day = 1; day < 36; day++) {\r\n                daysOfWeek[(day + firstDayOfWeek - 1) % 7].push(day);\r\n            }\r\n            for (const dayOfWeek of this.daysOfWeek) {\r\n                for (const day of daysOfWeek[dayOfWeek]) {\r\n                    days.add(day);\r\n                }\r\n            }\r\n            for (const dayOfWeek of this.lastDaysOfWeek) {\r\n                for (let i = daysOfWeek[dayOfWeek].length - 1; i >= 0; i--) {\r\n                    if (daysOfWeek[dayOfWeek][i] <= lastDateOfMonth) {\r\n                        days.add(daysOfWeek[dayOfWeek][i]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            for (const [dayOfWeek, nthOfMonth] of this.nthDaysOfWeek) {\r\n                days.add(daysOfWeek[dayOfWeek][nthOfMonth - 1]);\r\n            }\r\n        }\r\n        return Array.from(days).filter(day => day <= lastDateOfMonth).sort(sortAsc);\r\n    }\r\n}\r\nexport class MonthsField extends Field {\r\n    constructor(field) {\r\n        super(field.replace(monthReplacementRegex, match => {\r\n            return monthReplacements.indexOf(match) + 1 + '';\r\n        }));\r\n        this.first = 1;\r\n        this.last = 12;\r\n    }\r\n}\r\nexport class YearsField extends Field {\r\n    constructor(field) {\r\n        super(field);\r\n        this.first = 1970;\r\n        this.last = 2099;\r\n        this.items;\r\n    }\r\n    parse() {\r\n        return this.field.split(',')\r\n            .map(item => FieldItem.parse(item, 0, maxValidYear));\r\n    }\r\n    get warnings() {\r\n        return getIncrementLargerThanRangeWarnings(this.items, this.first, maxValidYear);\r\n    }\r\n    nextYear(fromYear) {\r\n        var _a;\r\n        return (_a = this.items.reduce((years, item) => {\r\n            var _a, _b, _c, _d;\r\n            if (item.any)\r\n                years.push(fromYear);\r\n            else if (item.single) {\r\n                const year = item.range.from;\r\n                if (year >= fromYear)\r\n                    years.push(year);\r\n            }\r\n            else {\r\n                const start = (_b = (_a = item.range) === null || _a === void 0 ? void 0 : _a.from) !== null && _b !== void 0 ? _b : this.first;\r\n                if (start > fromYear)\r\n                    years.push(start);\r\n                else {\r\n                    const nextYear = start + Math.ceil((fromYear - start) / item.step) * item.step;\r\n                    if (nextYear <= ((_d = (_c = item.range) === null || _c === void 0 ? void 0 : _c.to) !== null && _d !== void 0 ? _d : maxValidYear))\r\n                        years.push(nextYear);\r\n                }\r\n            }\r\n            return years;\r\n        }, []).sort(sortAsc)[0]) !== null && _a !== void 0 ? _a : null;\r\n    }\r\n}\r\n","export class CronosDate {\r\n    constructor(year, month = 1, day = 1, hour = 0, minute = 0, second = 0) {\r\n        this.year = year;\r\n        this.month = month;\r\n        this.day = day;\r\n        this.hour = hour;\r\n        this.minute = minute;\r\n        this.second = second;\r\n    }\r\n    static fromDate(date, timezone) {\r\n        if (!timezone) {\r\n            return new CronosDate(date.getFullYear(), date.getMonth() + 1, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());\r\n        }\r\n        return timezone['nativeDateToCronosDate'](date);\r\n    }\r\n    toDate(timezone) {\r\n        if (!timezone) {\r\n            return new Date(this.year, this.month - 1, this.day, this.hour, this.minute, this.second);\r\n        }\r\n        return timezone['cronosDateToNativeDate'](this);\r\n    }\r\n    static fromUTCTimestamp(timestamp) {\r\n        const date = new Date(timestamp);\r\n        return new CronosDate(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\r\n    }\r\n    toUTCTimestamp() {\r\n        return Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second);\r\n    }\r\n    copyWith({ year = this.year, month = this.month, day = this.day, hour = this.hour, minute = this.minute, second = this.second } = {}) {\r\n        return new CronosDate(year, month, day, hour, minute, second);\r\n    }\r\n}\r\n// Adapted from Intl.DateTimeFormat timezone handling in https://github.com/moment/luxon\r\nconst ZoneCache = new Map();\r\nexport class CronosTimezone {\r\n    constructor(IANANameOrOffset) {\r\n        if (typeof IANANameOrOffset === 'number') {\r\n            if (IANANameOrOffset > 840 || IANANameOrOffset < -840)\r\n                throw new Error('Invalid offset');\r\n            this.fixedOffset = IANANameOrOffset;\r\n            return this;\r\n        }\r\n        const offsetMatch = IANANameOrOffset.match(/^([+-]?)(0[1-9]|1[0-4])(?::?([0-5][0-9]))?$/);\r\n        if (offsetMatch) {\r\n            this.fixedOffset = (offsetMatch[1] === '-' ? -1 : 1) * ((parseInt(offsetMatch[2], 10) * 60) + (parseInt(offsetMatch[3], 10) || 0));\r\n            return this;\r\n        }\r\n        if (ZoneCache.has(IANANameOrOffset)) {\r\n            return ZoneCache.get(IANANameOrOffset);\r\n        }\r\n        try {\r\n            this.dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", {\r\n                hour12: false,\r\n                timeZone: IANANameOrOffset,\r\n                year: \"numeric\",\r\n                month: \"2-digit\",\r\n                day: \"2-digit\",\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                second: \"2-digit\"\r\n            });\r\n        }\r\n        catch (err) {\r\n            throw new Error('Invalid IANA name or offset');\r\n        }\r\n        this.zoneName = IANANameOrOffset;\r\n        const currentYear = new Date().getUTCFullYear();\r\n        this.winterOffset = this.offset(Date.UTC(currentYear, 0, 1));\r\n        this.summerOffset = this.offset(Date.UTC(currentYear, 5, 1));\r\n        ZoneCache.set(IANANameOrOffset, this);\r\n    }\r\n    toString() {\r\n        if (this.fixedOffset) {\r\n            const absOffset = Math.abs(this.fixedOffset);\r\n            return [\r\n                this.fixedOffset < 0 ? '-' : '+',\r\n                Math.floor(absOffset / 60).toString().padStart(2, '0'),\r\n                (absOffset % 60).toString().padStart(2, '0')\r\n            ].join('');\r\n        }\r\n        return this.zoneName;\r\n    }\r\n    offset(ts) {\r\n        if (!this.dateTimeFormat)\r\n            return this.fixedOffset || 0;\r\n        const date = new Date(ts);\r\n        const { year, month, day, hour, minute, second } = this.nativeDateToCronosDate(date);\r\n        const asUTC = Date.UTC(year, month - 1, day, hour, minute, second), asTS = ts - (ts % 1000);\r\n        return (asUTC - asTS) / 60000;\r\n    }\r\n    nativeDateToCronosDate(date) {\r\n        if (!this.dateTimeFormat) {\r\n            return CronosDate['fromUTCTimestamp'](date.getTime() + (this.fixedOffset || 0) * 60000);\r\n        }\r\n        return this.dateTimeFormat['formatToParts']\r\n            ? partsOffset(this.dateTimeFormat, date)\r\n            : hackyOffset(this.dateTimeFormat, date);\r\n    }\r\n    cronosDateToNativeDate(date) {\r\n        if (!this.dateTimeFormat) {\r\n            return new Date(date['toUTCTimestamp']() - (this.fixedOffset || 0) * 60000);\r\n        }\r\n        const provisionalOffset = ((date.month > 3 || date.month < 11) ? this.summerOffset : this.winterOffset) || 0;\r\n        const UTCTimestamp = date['toUTCTimestamp']();\r\n        // Find the right offset a given local time.\r\n        // Our UTC time is just a guess because our offset is just a guess\r\n        let utcGuess = UTCTimestamp - provisionalOffset * 60000;\r\n        // Test whether the zone matches the offset for this ts\r\n        const o2 = this.offset(utcGuess);\r\n        // If so, offset didn't change and we're done\r\n        if (provisionalOffset === o2)\r\n            return new Date(utcGuess);\r\n        // If not, change the ts by the difference in the offset\r\n        utcGuess -= (o2 - provisionalOffset) * 60000;\r\n        // If that gives us the local time we want, we're done\r\n        const o3 = this.offset(utcGuess);\r\n        if (o2 === o3)\r\n            return new Date(utcGuess);\r\n        // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\r\n        return new Date(UTCTimestamp - Math.min(o2, o3) * 60000);\r\n    }\r\n}\r\nfunction hackyOffset(dtf, date) {\r\n    const formatted = dtf.format(date).replace(/\\u200E/g, \"\"), parsed = formatted.match(/(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/), [, month, day, year, hour, minute, second] = (parsed !== null && parsed !== void 0 ? parsed : []).map(n => parseInt(n, 10));\r\n    return new CronosDate(year, month, day, hour % 24, minute, second);\r\n}\r\nfunction partsOffset(dtf, date) {\r\n    const formatted = dtf.formatToParts(date);\r\n    return new CronosDate(parseInt(formatted[4].value, 10), parseInt(formatted[0].value, 10), parseInt(formatted[2].value, 10), parseInt(formatted[6].value, 10) % 24, parseInt(formatted[8].value, 10), parseInt(formatted[10].value, 10));\r\n}\r\n","import { _parse } from './parser';\r\nimport { CronosDate, CronosTimezone } from './date';\r\nimport { flatMap } from './utils';\r\nconst hourinms = 60 * 60 * 1000;\r\nconst findFirstFrom = (from, list) => list.findIndex(n => n >= from);\r\nexport class CronosExpression {\r\n    constructor(cronString, seconds, minutes, hours, days, months, years) {\r\n        this.cronString = cronString;\r\n        this.seconds = seconds;\r\n        this.minutes = minutes;\r\n        this.hours = hours;\r\n        this.days = days;\r\n        this.months = months;\r\n        this.years = years;\r\n        this.skipRepeatedHour = true;\r\n        this.missingHour = 'insert';\r\n        this._warnings = null;\r\n    }\r\n    static parse(cronstring, options = {}) {\r\n        var _a;\r\n        const parsedFields = _parse(cronstring);\r\n        if (options.strict) {\r\n            let warnings = flatMap(parsedFields, field => field.warnings);\r\n            if (typeof options.strict === 'object') {\r\n                warnings = warnings\r\n                    .filter(warning => !!options.strict[warning.type]);\r\n            }\r\n            if (warnings.length > 0) {\r\n                throw new Error(`Strict mode: Parsing failed with ${warnings.length} warnings`);\r\n            }\r\n        }\r\n        const expr = new CronosExpression(cronstring, parsedFields[0].values, parsedFields[1].values, parsedFields[2].values, parsedFields[3].values, parsedFields[4].values, parsedFields[5]);\r\n        expr.timezone = options.timezone instanceof CronosTimezone ? options.timezone :\r\n            (options.timezone !== undefined ? new CronosTimezone(options.timezone) : undefined);\r\n        expr.skipRepeatedHour = options.skipRepeatedHour !== undefined ? options.skipRepeatedHour : expr.skipRepeatedHour;\r\n        expr.missingHour = (_a = options.missingHour) !== null && _a !== void 0 ? _a : expr.missingHour;\r\n        return expr;\r\n    }\r\n    get warnings() {\r\n        if (!this._warnings) {\r\n            const parsedFields = _parse(this.cronString);\r\n            this._warnings = flatMap(parsedFields, field => field.warnings);\r\n        }\r\n        return this._warnings;\r\n    }\r\n    toString() {\r\n        var _a, _b;\r\n        const showTzOpts = !this.timezone || !!this.timezone.zoneName;\r\n        const timezone = Object.entries({\r\n            tz: (_b = (_a = this.timezone) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : 'Local',\r\n            skipRepeatedHour: showTzOpts && this.skipRepeatedHour.toString(),\r\n            missingHour: showTzOpts && this.missingHour,\r\n        }).map(([key, val]) => val && key + ': ' + val).filter(s => s).join(', ');\r\n        return `${this.cronString} (${timezone})`;\r\n    }\r\n    nextDate(afterDate = new Date()) {\r\n        var _a;\r\n        const fromCronosDate = CronosDate.fromDate(afterDate, this.timezone);\r\n        if (((_a = this.timezone) === null || _a === void 0 ? void 0 : _a.fixedOffset) !== undefined) {\r\n            return this._next(fromCronosDate).date;\r\n        }\r\n        const fromTimestamp = afterDate.getTime(), fromLocalTimestamp = fromCronosDate['toUTCTimestamp'](), prevHourLocalTimestamp = CronosDate.fromDate(new Date(fromTimestamp - hourinms), this.timezone)['toUTCTimestamp'](), nextHourLocalTimestamp = CronosDate.fromDate(new Date(fromTimestamp + hourinms), this.timezone)['toUTCTimestamp'](), nextHourRepeated = nextHourLocalTimestamp - fromLocalTimestamp === 0, thisHourRepeated = fromLocalTimestamp - prevHourLocalTimestamp === 0, thisHourMissing = fromLocalTimestamp - prevHourLocalTimestamp === hourinms * 2;\r\n        if (this.skipRepeatedHour && thisHourRepeated) {\r\n            return this._next(fromCronosDate.copyWith({ minute: 59, second: 60 }), false).date;\r\n        }\r\n        if (this.missingHour === 'offset' && thisHourMissing) {\r\n            const nextDate = this._next(fromCronosDate.copyWith({ hour: fromCronosDate.hour - 1 })).date;\r\n            if (!nextDate || nextDate.getTime() > fromTimestamp)\r\n                return nextDate;\r\n        }\r\n        let { date: nextDate, cronosDate: nextCronosDate } = this._next(fromCronosDate);\r\n        if (this.missingHour !== 'offset' && nextCronosDate && nextDate) {\r\n            const nextDateNextHourTimestamp = nextCronosDate.copyWith({ hour: nextCronosDate.hour + 1 }).toDate(this.timezone).getTime();\r\n            if (nextDateNextHourTimestamp === nextDate.getTime()) {\r\n                if (this.missingHour === 'insert') {\r\n                    return nextCronosDate.copyWith({ minute: 0, second: 0 }).toDate(this.timezone);\r\n                }\r\n                // this.missingHour === 'skip'\r\n                return this._next(nextCronosDate.copyWith({ minute: 59, second: 59 })).date;\r\n            }\r\n        }\r\n        if (!this.skipRepeatedHour) {\r\n            if (nextHourRepeated && (!nextDate || (nextDate.getTime() > fromTimestamp + hourinms))) {\r\n                nextDate = this._next(fromCronosDate.copyWith({ minute: 0, second: 0 }), false).date;\r\n            }\r\n            if (nextDate && nextDate < afterDate) {\r\n                nextDate = new Date(nextDate.getTime() + hourinms);\r\n            }\r\n        }\r\n        return nextDate;\r\n    }\r\n    _next(date, after = true) {\r\n        const nextDate = this._nextYear(after ? date.copyWith({ second: date.second + 1 }) : date);\r\n        return {\r\n            cronosDate: nextDate,\r\n            date: nextDate ? nextDate.toDate(this.timezone) : null\r\n        };\r\n    }\r\n    nextNDates(afterDate = new Date(), n = 5) {\r\n        const dates = [];\r\n        let lastDate = afterDate;\r\n        for (let i = 0; i < n; i++) {\r\n            const date = this.nextDate(lastDate);\r\n            if (!date)\r\n                break;\r\n            lastDate = date;\r\n            dates.push(date);\r\n        }\r\n        return dates;\r\n    }\r\n    _nextYear(fromDate) {\r\n        let year = fromDate.year;\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            year = this.years.nextYear(year);\r\n            if (year === null)\r\n                return null;\r\n            nextDate = this._nextMonth((year === fromDate.year) ? fromDate : new CronosDate(year));\r\n            year++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextMonth(fromDate) {\r\n        let nextMonthIndex = findFirstFrom(fromDate.month, this.months);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextMonth = this.months[nextMonthIndex];\r\n            if (nextMonth === undefined)\r\n                return null;\r\n            nextDate = this._nextDay((nextMonth === fromDate.month) ? fromDate : new CronosDate(fromDate.year, nextMonth));\r\n            nextMonthIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextDay(fromDate) {\r\n        const days = this.days.getDays(fromDate.year, fromDate.month);\r\n        let nextDayIndex = findFirstFrom(fromDate.day, days);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextDay = days[nextDayIndex];\r\n            if (nextDay === undefined)\r\n                return null;\r\n            nextDate = this._nextHour((nextDay === fromDate.day) ? fromDate : new CronosDate(fromDate.year, fromDate.month, nextDay));\r\n            nextDayIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextHour(fromDate) {\r\n        let nextHourIndex = findFirstFrom(fromDate.hour, this.hours);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextHour = this.hours[nextHourIndex];\r\n            if (nextHour === undefined)\r\n                return null;\r\n            nextDate = this._nextMinute((nextHour === fromDate.hour) ? fromDate :\r\n                new CronosDate(fromDate.year, fromDate.month, fromDate.day, nextHour));\r\n            nextHourIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextMinute(fromDate) {\r\n        let nextMinuteIndex = findFirstFrom(fromDate.minute, this.minutes);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextMinute = this.minutes[nextMinuteIndex];\r\n            if (nextMinute === undefined)\r\n                return null;\r\n            nextDate = this._nextSecond((nextMinute === fromDate.minute) ? fromDate :\r\n                new CronosDate(fromDate.year, fromDate.month, fromDate.day, fromDate.hour, nextMinute));\r\n            nextMinuteIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextSecond(fromDate) {\r\n        const nextSecondIndex = findFirstFrom(fromDate.second, this.seconds), nextSecond = this.seconds[nextSecondIndex];\r\n        if (nextSecond === undefined)\r\n            return null;\r\n        return fromDate.copyWith({ second: nextSecond });\r\n    }\r\n}\r\n","const maxTimeout = Math.pow(2, 31) - 1;\r\nconst scheduledTasks = [];\r\nlet runningTimer = null;\r\nfunction addTask(task) {\r\n    if (task['_timestamp'] !== undefined) {\r\n        const insertIndex = scheduledTasks.findIndex(t => t['_timestamp'] < task['_timestamp']);\r\n        if (insertIndex >= 0)\r\n            scheduledTasks.splice(insertIndex, 0, task);\r\n        else\r\n            scheduledTasks.push(task);\r\n    }\r\n}\r\nfunction removeTask(task) {\r\n    const removeIndex = scheduledTasks.indexOf(task);\r\n    if (removeIndex >= 0)\r\n        scheduledTasks.splice(removeIndex, 1);\r\n    if (scheduledTasks.length === 0 && runningTimer) {\r\n        clearTimeout(runningTimer);\r\n        runningTimer = null;\r\n    }\r\n}\r\nfunction runScheduledTasks(skipRun = false) {\r\n    if (runningTimer)\r\n        clearTimeout(runningTimer);\r\n    const now = Date.now();\r\n    const removeIndex = scheduledTasks.findIndex(task => task['_timestamp'] <= now);\r\n    const tasksToRun = removeIndex >= 0 ? scheduledTasks.splice(removeIndex) : [];\r\n    for (let task of tasksToRun) {\r\n        if (!skipRun)\r\n            task['_runTask']();\r\n        if (task.isRunning) {\r\n            task['_updateTimestamp']();\r\n            addTask(task);\r\n        }\r\n    }\r\n    const nextTask = scheduledTasks[scheduledTasks.length - 1];\r\n    if (nextTask) {\r\n        runningTimer = setTimeout(runScheduledTasks, Math.min(nextTask['_timestamp'] - Date.now(), maxTimeout));\r\n    }\r\n    else\r\n        runningTimer = null;\r\n}\r\nexport function refreshSchedulerTimer() {\r\n    for (const task of scheduledTasks) {\r\n        task['_updateTimestamp']();\r\n        if (!task.isRunning)\r\n            removeTask(task);\r\n    }\r\n    scheduledTasks.sort((a, b) => b['_timestamp'] - a['_timestamp']);\r\n    runScheduledTasks(true);\r\n}\r\nclass DateArraySequence {\r\n    constructor(dateLikes) {\r\n        this._dates = dateLikes.map(dateLike => {\r\n            const date = new Date(dateLike);\r\n            if (isNaN(date.getTime()))\r\n                throw new Error('Invalid date');\r\n            return date;\r\n        }).sort((a, b) => a.getTime() - b.getTime());\r\n    }\r\n    nextDate(afterDate) {\r\n        const nextIndex = this._dates.findIndex(d => d > afterDate);\r\n        return nextIndex === -1 ? null : this._dates[nextIndex];\r\n    }\r\n}\r\nexport class CronosTask {\r\n    constructor(sequenceOrDates) {\r\n        this._listeners = {\r\n            'started': new Set(),\r\n            'stopped': new Set(),\r\n            'run': new Set(),\r\n            'ended': new Set(),\r\n        };\r\n        if (Array.isArray(sequenceOrDates))\r\n            this._sequence = new DateArraySequence(sequenceOrDates);\r\n        else if (typeof sequenceOrDates === 'string' ||\r\n            typeof sequenceOrDates === 'number' ||\r\n            sequenceOrDates instanceof Date)\r\n            this._sequence = new DateArraySequence([sequenceOrDates]);\r\n        else\r\n            this._sequence = sequenceOrDates;\r\n    }\r\n    start() {\r\n        if (!this.isRunning) {\r\n            this._updateTimestamp();\r\n            addTask(this);\r\n            runScheduledTasks();\r\n            if (this.isRunning)\r\n                this._emit('started');\r\n        }\r\n        return this;\r\n    }\r\n    stop() {\r\n        if (this.isRunning) {\r\n            this._timestamp = undefined;\r\n            removeTask(this);\r\n            this._emit('stopped');\r\n        }\r\n        return this;\r\n    }\r\n    get nextRun() {\r\n        return this.isRunning ? new Date(this._timestamp) : undefined;\r\n    }\r\n    get isRunning() {\r\n        return this._timestamp !== undefined;\r\n    }\r\n    _runTask() {\r\n        this._emit('run', this._timestamp);\r\n    }\r\n    _updateTimestamp() {\r\n        const nextDate = this._sequence.nextDate(new Date());\r\n        this._timestamp = nextDate ? nextDate.getTime() : undefined;\r\n        if (!this.isRunning)\r\n            this._emit('ended');\r\n    }\r\n    on(event, listener) {\r\n        this._listeners[event].add(listener);\r\n        return this;\r\n    }\r\n    off(event, listener) {\r\n        this._listeners[event].delete(listener);\r\n        return this;\r\n    }\r\n    _emit(event, ...args) {\r\n        this._listeners[event].forEach((listener) => {\r\n            listener.call(this, ...args);\r\n        });\r\n    }\r\n}\r\n","import { CronosExpression } from './expression';\r\nimport { CronosTask, refreshSchedulerTimer } from './scheduler';\r\nimport { CronosTimezone } from './date';\r\nexport function scheduleTask(cronString, task, options) {\r\n    const expression = CronosExpression.parse(cronString, options);\r\n    return new CronosTask(expression)\r\n        .on('run', task)\r\n        .start();\r\n}\r\nexport function validate(cronString, options) {\r\n    try {\r\n        CronosExpression.parse(cronString, options);\r\n    }\r\n    catch {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport { CronosExpression, CronosTask, CronosTimezone, refreshSchedulerTimer };\r\n"],"names":[],"mappings":"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"}
{"version":3,"file":"index.js","sources":["../dist-src/utils.js","../dist-src/parser.js","../dist-src/date.js","../dist-src/expression.js","../dist-src/scheduler.js","../dist-src/index.js"],"sourcesContent":["export const sortAsc = (a, b) => a - b;\r\nexport function flatMap(arr, mapper) {\r\n    return arr.reduce((acc, val, i) => {\r\n        acc.push(...mapper(val, i, arr));\r\n        return acc;\r\n    }, []);\r\n}\r\n","import { sortAsc, flatMap } from './utils';\r\nconst predefinedCronStrings = {\r\n    '@yearly': '0 0 0 1 1 * *',\r\n    '@annually': '0 0 0 1 1 * *',\r\n    '@monthly': '0 0 0 1 * * *',\r\n    '@weekly': '0 0 0 * * 0 *',\r\n    '@daily': '0 0 0 * * * *',\r\n    '@midnight': '0 0 0 * * * *',\r\n    '@hourly': '0 0 * * * * *',\r\n};\r\nconst monthReplacements = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\r\nconst monthReplacementRegex = new RegExp(monthReplacements.join('|'), 'g');\r\nconst dayOfWeekReplacements = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\r\nconst dayOfWeekReplacementRegex = new RegExp(dayOfWeekReplacements.join('|'), 'g');\r\n/*\r\n\"The actual range of times supported by ECMAScript Date objects is slightly smaller:\r\n  exactly â€“100,000,000 days to 100,000,000 days measured relative to midnight at the\r\n  beginning of 01 January, 1970 UTC. This gives a range of 8,640,000,000,000,000\r\n  milliseconds to either side of 01 January, 1970 UTC.\"\r\nhttp://ecma-international.org/ecma-262/5.1/#sec-15.9.1.1\r\n\r\nnew Date(8640000000000000) => 00:00:00 13th Sep 275760\r\nLargest full year valid as JS date = 275759\r\n*/\r\nconst maxValidYear = 275759;\r\nexport var WarningType;\r\n(function (WarningType) {\r\n    WarningType[\"IncrementLargerThanRange\"] = \"IncrementLargerThanRange\";\r\n})(WarningType || (WarningType = {}));\r\nexport function _parse(cronstring) {\r\n    let expr = cronstring.trim().toLowerCase();\r\n    if (predefinedCronStrings[expr]) {\r\n        expr = predefinedCronStrings[expr];\r\n    }\r\n    const fields = expr.split(/\\s+/g);\r\n    if (fields.length < 5 || fields.length > 7) {\r\n        throw new Error('Expression must have at least 5 fields, and no more than 7 fields');\r\n    }\r\n    switch (fields.length) {\r\n        case 5:\r\n            fields.unshift('0');\r\n        case 6:\r\n            fields.push('*');\r\n    }\r\n    return [\r\n        new SecondsOrMinutesField(fields[0]),\r\n        new SecondsOrMinutesField(fields[1]),\r\n        new HoursField(fields[2]),\r\n        new DaysField(fields[3], fields[5]),\r\n        new MonthsField(fields[4]),\r\n        new YearsField(fields[6])\r\n    ];\r\n}\r\nfunction getIncrementLargerThanRangeWarnings(items, first, last) {\r\n    const warnings = [];\r\n    for (let item of items) {\r\n        let rangeLength;\r\n        if (item.step > 1 &&\r\n            item.step > (rangeLength = item.rangeLength(first, last))) {\r\n            warnings.push({\r\n                type: WarningType.IncrementLargerThanRange,\r\n                message: `Increment (${item.step}) is larger than range (${rangeLength}) for expression '${item.itemString}'`\r\n            });\r\n        }\r\n    }\r\n    return warnings;\r\n}\r\nclass Field {\r\n    constructor(field) {\r\n        this.field = field;\r\n    }\r\n    parse() {\r\n        return this.field.split(',')\r\n            .map(item => FieldItem.parse(item, this.first, this.last, true));\r\n    }\r\n    get items() {\r\n        if (!this._items)\r\n            this._items = this.parse();\r\n        return this._items;\r\n    }\r\n    get values() {\r\n        return Field.getValues(this.items, this.first, this.last);\r\n    }\r\n    get warnings() {\r\n        return getIncrementLargerThanRangeWarnings(this.items, this.first, this.last);\r\n    }\r\n    static getValues(items, first, last) {\r\n        return Array.from(new Set(flatMap(items, item => item.values(first, last)))).sort(sortAsc);\r\n    }\r\n}\r\nclass FieldItem {\r\n    constructor(itemString) {\r\n        this.itemString = itemString;\r\n        this.step = 1;\r\n    }\r\n    rangeLength(first, last) {\r\n        var _a, _b, _c, _d;\r\n        const start = (_b = (_a = this.range) === null || _a === void 0 ? void 0 : _a.from) !== null && _b !== void 0 ? _b : first, end = (_d = (_c = this.range) === null || _c === void 0 ? void 0 : _c.to) !== null && _d !== void 0 ? _d : last;\r\n        return (end < start) ? ((last - start) + (end - first) + 1) : (end - start);\r\n    }\r\n    values(first, last) {\r\n        const start = this.range ? this.range.from : first, rangeLength = this.rangeLength(first, last);\r\n        return Array(Math.floor(rangeLength / this.step) + 1)\r\n            .fill(0)\r\n            .map((_, i) => first + ((start - first + (this.step * i)) % (last - first + 1)));\r\n    }\r\n    get any() {\r\n        return this.range === undefined && this.step === 1;\r\n    }\r\n    get single() {\r\n        return !!this.range && this.range.from === this.range.to;\r\n    }\r\n    static parse(item, first, last, allowCyclicRange = false, transformer) {\r\n        var _a;\r\n        const fieldItem = new FieldItem(item);\r\n        const [match, all, startFrom, range, step] = ((_a = item.match(/^(?:(\\*)|([0-9]+)|([0-9]+-[0-9]+))(?:\\/([1-9][0-9]*))?$/)) !== null && _a !== void 0 ? _a : []);\r\n        if (!match)\r\n            throw new Error('Field item invalid format');\r\n        if (step) {\r\n            fieldItem.step = parseInt(step, 10);\r\n        }\r\n        if (startFrom) {\r\n            let start = parseInt(startFrom, 10);\r\n            start = transformer ? transformer(start) : start;\r\n            if (start < first || start > last)\r\n                throw new Error('Field item out of valid value range');\r\n            fieldItem.range = {\r\n                from: start,\r\n                to: step ? undefined : start\r\n            };\r\n        }\r\n        else if (range) {\r\n            const [rangeStart, rangeEnd] = range.split('-').map(x => {\r\n                const n = parseInt(x, 10);\r\n                return transformer ? transformer(n) : n;\r\n            });\r\n            if (rangeStart < first || rangeStart > last || rangeEnd < first || rangeEnd > last ||\r\n                (rangeEnd < rangeStart && !allowCyclicRange)) {\r\n                throw new Error('Field item range invalid, either value out of valid range or start greater than end in non wraparound field');\r\n            }\r\n            fieldItem.range = {\r\n                from: rangeStart,\r\n                to: rangeEnd\r\n            };\r\n        }\r\n        return fieldItem;\r\n    }\r\n}\r\nFieldItem.asterisk = new FieldItem('*');\r\nexport class SecondsOrMinutesField extends Field {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.first = 0;\r\n        this.last = 59;\r\n    }\r\n}\r\nexport class HoursField extends Field {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.first = 0;\r\n        this.last = 23;\r\n    }\r\n}\r\nexport class DaysField {\r\n    constructor(daysOfMonthField, daysOfWeekField) {\r\n        this.lastDay = false;\r\n        this.lastWeekday = false;\r\n        this.daysItems = [];\r\n        this.nearestWeekdayItems = [];\r\n        this.daysOfWeekItems = [];\r\n        this.lastDaysOfWeekItems = [];\r\n        this.nthDaysOfWeekItems = [];\r\n        for (let item of daysOfMonthField.split(',').map(s => s === '?' ? '*' : s)) {\r\n            if (item === 'l') {\r\n                this.lastDay = true;\r\n            }\r\n            else if (item === 'lw') {\r\n                this.lastWeekday = true;\r\n            }\r\n            else if (item.endsWith('w')) {\r\n                this.nearestWeekdayItems.push(FieldItem.parse(item.slice(0, -1), 1, 31));\r\n            }\r\n            else {\r\n                this.daysItems.push(FieldItem.parse(item, 1, 31));\r\n            }\r\n        }\r\n        const normalisedDaysOfWeekField = daysOfWeekField.replace(dayOfWeekReplacementRegex, match => dayOfWeekReplacements.indexOf(match) + '');\r\n        const parseDayOfWeek = (item) => FieldItem.parse(item, 0, 6, true, n => n === 7 ? 0 : n);\r\n        for (let item of normalisedDaysOfWeekField.split(',').map(s => s === '?' ? '*' : s)) {\r\n            const nthIndex = item.lastIndexOf('#');\r\n            if (item.endsWith('l')) {\r\n                this.lastDaysOfWeekItems.push(parseDayOfWeek(item.slice(0, -1)));\r\n            }\r\n            else if (nthIndex !== -1) {\r\n                const nth = item.slice(nthIndex + 1);\r\n                if (!/^[1-5]$/.test(nth))\r\n                    throw new Error('Field item nth of month (#) invalid');\r\n                this.nthDaysOfWeekItems.push({\r\n                    item: parseDayOfWeek(item.slice(0, nthIndex)),\r\n                    nth: parseInt(nth, 10)\r\n                });\r\n            }\r\n            else {\r\n                this.daysOfWeekItems.push(parseDayOfWeek(item));\r\n            }\r\n        }\r\n    }\r\n    get values() {\r\n        return DaysFieldValues.fromField(this);\r\n    }\r\n    get warnings() {\r\n        const warnings = [], dayItems = [\r\n            ...this.daysItems,\r\n            ...this.nearestWeekdayItems,\r\n        ], weekItems = [\r\n            ...this.daysOfWeekItems,\r\n            ...this.lastDaysOfWeekItems,\r\n            ...this.nthDaysOfWeekItems.map(({ item }) => item),\r\n        ];\r\n        warnings.push(...getIncrementLargerThanRangeWarnings(dayItems, 1, 31), ...getIncrementLargerThanRangeWarnings(weekItems, 0, 6));\r\n        return warnings;\r\n    }\r\n    get allDays() {\r\n        return (!this.lastDay &&\r\n            !this.lastWeekday &&\r\n            !this.nearestWeekdayItems.length &&\r\n            !this.lastDaysOfWeekItems.length &&\r\n            !this.nthDaysOfWeekItems.length &&\r\n            this.daysItems.length === 1 && this.daysItems[0].any &&\r\n            this.daysOfWeekItems.length === 1 && this.daysOfWeekItems[0].any);\r\n    }\r\n}\r\nexport class DaysFieldValues {\r\n    constructor() {\r\n        this.lastDay = false;\r\n        this.lastWeekday = false;\r\n        this.days = [];\r\n        this.nearestWeekday = [];\r\n        this.daysOfWeek = [];\r\n        this.lastDaysOfWeek = [];\r\n        this.nthDaysOfWeek = [];\r\n    }\r\n    static fromField(field) {\r\n        const values = new DaysFieldValues();\r\n        const filterAnyItems = (items) => items.filter(item => !item.any);\r\n        values.lastDay = field.lastDay;\r\n        values.lastWeekday = field.lastWeekday;\r\n        values.days = Field.getValues(field.allDays ? [FieldItem.asterisk] : filterAnyItems(field.daysItems), 1, 31);\r\n        values.nearestWeekday = Field.getValues(field.nearestWeekdayItems, 1, 31);\r\n        values.daysOfWeek = Field.getValues(filterAnyItems(field.daysOfWeekItems), 0, 6);\r\n        values.lastDaysOfWeek = Field.getValues(field.lastDaysOfWeekItems, 0, 6);\r\n        const nthDaysHashes = new Set();\r\n        for (let item of field.nthDaysOfWeekItems) {\r\n            for (let n of item.item.values(0, 6)) {\r\n                let hash = n * 10 + item.nth;\r\n                if (!nthDaysHashes.has(hash)) {\r\n                    nthDaysHashes.add(hash);\r\n                    values.nthDaysOfWeek.push([n, item.nth]);\r\n                }\r\n            }\r\n        }\r\n        return values;\r\n    }\r\n    getDays(year, month) {\r\n        const days = new Set(this.days);\r\n        const lastDateOfMonth = new Date(year, month, 0).getDate();\r\n        const firstDayOfWeek = new Date(year, month - 1, 1).getDay();\r\n        const getNearestWeekday = (day) => {\r\n            if (day > lastDateOfMonth)\r\n                day = lastDateOfMonth;\r\n            const dayOfWeek = (day + firstDayOfWeek - 1) % 7;\r\n            let weekday = day + (dayOfWeek === 0 ? 1 : (dayOfWeek === 6 ? -1 : 0));\r\n            return weekday + (weekday < 1 ? 3 : (weekday > lastDateOfMonth ? -3 : 0));\r\n        };\r\n        if (this.lastDay) {\r\n            days.add(lastDateOfMonth);\r\n        }\r\n        if (this.lastWeekday) {\r\n            days.add(getNearestWeekday(lastDateOfMonth));\r\n        }\r\n        for (const day of this.nearestWeekday) {\r\n            days.add(getNearestWeekday(day));\r\n        }\r\n        if (this.daysOfWeek.length ||\r\n            this.lastDaysOfWeek.length ||\r\n            this.nthDaysOfWeek.length) {\r\n            const daysOfWeek = Array(7).fill(0).map(() => ([]));\r\n            for (let day = 1; day < 36; day++) {\r\n                daysOfWeek[(day + firstDayOfWeek - 1) % 7].push(day);\r\n            }\r\n            for (const dayOfWeek of this.daysOfWeek) {\r\n                for (const day of daysOfWeek[dayOfWeek]) {\r\n                    days.add(day);\r\n                }\r\n            }\r\n            for (const dayOfWeek of this.lastDaysOfWeek) {\r\n                for (let i = daysOfWeek[dayOfWeek].length - 1; i >= 0; i--) {\r\n                    if (daysOfWeek[dayOfWeek][i] <= lastDateOfMonth) {\r\n                        days.add(daysOfWeek[dayOfWeek][i]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            for (const [dayOfWeek, nthOfMonth] of this.nthDaysOfWeek) {\r\n                days.add(daysOfWeek[dayOfWeek][nthOfMonth - 1]);\r\n            }\r\n        }\r\n        return Array.from(days).filter(day => day <= lastDateOfMonth).sort(sortAsc);\r\n    }\r\n}\r\nexport class MonthsField extends Field {\r\n    constructor(field) {\r\n        super(field.replace(monthReplacementRegex, match => {\r\n            return monthReplacements.indexOf(match) + 1 + '';\r\n        }));\r\n        this.first = 1;\r\n        this.last = 12;\r\n    }\r\n}\r\nexport class YearsField extends Field {\r\n    constructor(field) {\r\n        super(field);\r\n        this.first = 1970;\r\n        this.last = 2099;\r\n        this.items;\r\n    }\r\n    parse() {\r\n        return this.field.split(',')\r\n            .map(item => FieldItem.parse(item, 0, maxValidYear));\r\n    }\r\n    get warnings() {\r\n        return getIncrementLargerThanRangeWarnings(this.items, this.first, maxValidYear);\r\n    }\r\n    nextYear(fromYear) {\r\n        var _a;\r\n        return (_a = this.items.reduce((years, item) => {\r\n            var _a, _b, _c, _d;\r\n            if (item.any)\r\n                years.push(fromYear);\r\n            else if (item.single) {\r\n                const year = item.range.from;\r\n                if (year >= fromYear)\r\n                    years.push(year);\r\n            }\r\n            else {\r\n                const start = (_b = (_a = item.range) === null || _a === void 0 ? void 0 : _a.from) !== null && _b !== void 0 ? _b : this.first;\r\n                if (start > fromYear)\r\n                    years.push(start);\r\n                else {\r\n                    const nextYear = start + Math.ceil((fromYear - start) / item.step) * item.step;\r\n                    if (nextYear <= ((_d = (_c = item.range) === null || _c === void 0 ? void 0 : _c.to) !== null && _d !== void 0 ? _d : maxValidYear))\r\n                        years.push(nextYear);\r\n                }\r\n            }\r\n            return years;\r\n        }, []).sort(sortAsc)[0]) !== null && _a !== void 0 ? _a : null;\r\n    }\r\n}\r\n","export class CronosDate {\r\n    constructor(year, month = 1, day = 1, hour = 0, minute = 0, second = 0) {\r\n        this.year = year;\r\n        this.month = month;\r\n        this.day = day;\r\n        this.hour = hour;\r\n        this.minute = minute;\r\n        this.second = second;\r\n    }\r\n    static fromDate(date, timezone) {\r\n        if (!timezone) {\r\n            return new CronosDate(date.getFullYear(), date.getMonth() + 1, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());\r\n        }\r\n        return timezone['nativeDateToCronosDate'](date);\r\n    }\r\n    toDate(timezone) {\r\n        if (!timezone) {\r\n            return new Date(this.year, this.month - 1, this.day, this.hour, this.minute, this.second);\r\n        }\r\n        return timezone['cronosDateToNativeDate'](this);\r\n    }\r\n    static fromUTCTimestamp(timestamp) {\r\n        const date = new Date(timestamp);\r\n        return new CronosDate(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\r\n    }\r\n    toUTCTimestamp() {\r\n        return Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second);\r\n    }\r\n    copyWith({ year = this.year, month = this.month, day = this.day, hour = this.hour, minute = this.minute, second = this.second } = {}) {\r\n        return new CronosDate(year, month, day, hour, minute, second);\r\n    }\r\n}\r\n// Adapted from Intl.DateTimeFormat timezone handling in https://github.com/moment/luxon\r\nconst ZoneCache = new Map();\r\nexport class CronosTimezone {\r\n    constructor(IANANameOrOffset) {\r\n        if (typeof IANANameOrOffset === 'number') {\r\n            if (IANANameOrOffset > 840 || IANANameOrOffset < -840)\r\n                throw new Error('Invalid offset');\r\n            this.fixedOffset = IANANameOrOffset;\r\n            return this;\r\n        }\r\n        const offsetMatch = IANANameOrOffset.match(/^([+-]?)(0[1-9]|1[0-4])(?::?([0-5][0-9]))?$/);\r\n        if (offsetMatch) {\r\n            this.fixedOffset = (offsetMatch[1] === '-' ? -1 : 1) * ((parseInt(offsetMatch[2], 10) * 60) + (parseInt(offsetMatch[3], 10) || 0));\r\n            return this;\r\n        }\r\n        if (ZoneCache.has(IANANameOrOffset)) {\r\n            return ZoneCache.get(IANANameOrOffset);\r\n        }\r\n        try {\r\n            this.dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", {\r\n                hour12: false,\r\n                timeZone: IANANameOrOffset,\r\n                year: \"numeric\",\r\n                month: \"2-digit\",\r\n                day: \"2-digit\",\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                second: \"2-digit\"\r\n            });\r\n        }\r\n        catch (err) {\r\n            throw new Error('Invalid IANA name or offset');\r\n        }\r\n        this.zoneName = IANANameOrOffset;\r\n        const currentYear = new Date().getUTCFullYear();\r\n        this.winterOffset = this.offset(Date.UTC(currentYear, 0, 1));\r\n        this.summerOffset = this.offset(Date.UTC(currentYear, 5, 1));\r\n        ZoneCache.set(IANANameOrOffset, this);\r\n    }\r\n    toString() {\r\n        if (this.fixedOffset) {\r\n            const absOffset = Math.abs(this.fixedOffset);\r\n            return [\r\n                this.fixedOffset < 0 ? '-' : '+',\r\n                Math.floor(absOffset / 60).toString().padStart(2, '0'),\r\n                (absOffset % 60).toString().padStart(2, '0')\r\n            ].join('');\r\n        }\r\n        return this.zoneName;\r\n    }\r\n    offset(ts) {\r\n        if (!this.dateTimeFormat)\r\n            return this.fixedOffset || 0;\r\n        const date = new Date(ts);\r\n        const { year, month, day, hour, minute, second } = this.nativeDateToCronosDate(date);\r\n        const asUTC = Date.UTC(year, month - 1, day, hour, minute, second), asTS = ts - (ts % 1000);\r\n        return (asUTC - asTS) / 60000;\r\n    }\r\n    nativeDateToCronosDate(date) {\r\n        if (!this.dateTimeFormat) {\r\n            return CronosDate['fromUTCTimestamp'](date.getTime() + (this.fixedOffset || 0) * 60000);\r\n        }\r\n        return this.dateTimeFormat['formatToParts']\r\n            ? partsOffset(this.dateTimeFormat, date)\r\n            : hackyOffset(this.dateTimeFormat, date);\r\n    }\r\n    cronosDateToNativeDate(date) {\r\n        if (!this.dateTimeFormat) {\r\n            return new Date(date['toUTCTimestamp']() - (this.fixedOffset || 0) * 60000);\r\n        }\r\n        const provisionalOffset = ((date.month > 3 || date.month < 11) ? this.summerOffset : this.winterOffset) || 0;\r\n        const UTCTimestamp = date['toUTCTimestamp']();\r\n        // Find the right offset a given local time.\r\n        // Our UTC time is just a guess because our offset is just a guess\r\n        let utcGuess = UTCTimestamp - provisionalOffset * 60000;\r\n        // Test whether the zone matches the offset for this ts\r\n        const o2 = this.offset(utcGuess);\r\n        // If so, offset didn't change and we're done\r\n        if (provisionalOffset === o2)\r\n            return new Date(utcGuess);\r\n        // If not, change the ts by the difference in the offset\r\n        utcGuess -= (o2 - provisionalOffset) * 60000;\r\n        // If that gives us the local time we want, we're done\r\n        const o3 = this.offset(utcGuess);\r\n        if (o2 === o3)\r\n            return new Date(utcGuess);\r\n        // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\r\n        return new Date(UTCTimestamp - Math.min(o2, o3) * 60000);\r\n    }\r\n}\r\nfunction hackyOffset(dtf, date) {\r\n    const formatted = dtf.format(date).replace(/\\u200E/g, \"\"), parsed = formatted.match(/(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/), [, month, day, year, hour, minute, second] = (parsed !== null && parsed !== void 0 ? parsed : []).map(n => parseInt(n, 10));\r\n    return new CronosDate(year, month, day, hour % 24, minute, second);\r\n}\r\nfunction partsOffset(dtf, date) {\r\n    const formatted = dtf.formatToParts(date);\r\n    return new CronosDate(parseInt(formatted[4].value, 10), parseInt(formatted[0].value, 10), parseInt(formatted[2].value, 10), parseInt(formatted[6].value, 10) % 24, parseInt(formatted[8].value, 10), parseInt(formatted[10].value, 10));\r\n}\r\n","import { _parse } from './parser';\r\nimport { CronosDate, CronosTimezone } from './date';\r\nimport { flatMap } from './utils';\r\nconst hourinms = 60 * 60 * 1000;\r\nconst findFirstFrom = (from, list) => list.findIndex(n => n >= from);\r\nexport class CronosExpression {\r\n    constructor(cronString, seconds, minutes, hours, days, months, years) {\r\n        this.cronString = cronString;\r\n        this.seconds = seconds;\r\n        this.minutes = minutes;\r\n        this.hours = hours;\r\n        this.days = days;\r\n        this.months = months;\r\n        this.years = years;\r\n        this.skipRepeatedHour = true;\r\n        this.missingHour = 'insert';\r\n        this._warnings = null;\r\n    }\r\n    static parse(cronstring, options = {}) {\r\n        var _a;\r\n        const parsedFields = _parse(cronstring);\r\n        if (options.strict) {\r\n            let warnings = flatMap(parsedFields, field => field.warnings);\r\n            if (typeof options.strict === 'object') {\r\n                warnings = warnings\r\n                    .filter(warning => !!options.strict[warning.type]);\r\n            }\r\n            if (warnings.length > 0) {\r\n                throw new Error(`Strict mode: Parsing failed with ${warnings.length} warnings`);\r\n            }\r\n        }\r\n        const expr = new CronosExpression(cronstring, parsedFields[0].values, parsedFields[1].values, parsedFields[2].values, parsedFields[3].values, parsedFields[4].values, parsedFields[5]);\r\n        expr.timezone = options.timezone instanceof CronosTimezone ? options.timezone :\r\n            (options.timezone !== undefined ? new CronosTimezone(options.timezone) : undefined);\r\n        expr.skipRepeatedHour = options.skipRepeatedHour !== undefined ? options.skipRepeatedHour : expr.skipRepeatedHour;\r\n        expr.missingHour = (_a = options.missingHour) !== null && _a !== void 0 ? _a : expr.missingHour;\r\n        return expr;\r\n    }\r\n    get warnings() {\r\n        if (!this._warnings) {\r\n            const parsedFields = _parse(this.cronString);\r\n            this._warnings = flatMap(parsedFields, field => field.warnings);\r\n        }\r\n        return this._warnings;\r\n    }\r\n    toString() {\r\n        var _a, _b;\r\n        const showTzOpts = !this.timezone || !!this.timezone.zoneName;\r\n        const timezone = Object.entries({\r\n            tz: (_b = (_a = this.timezone) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : 'Local',\r\n            skipRepeatedHour: showTzOpts && this.skipRepeatedHour.toString(),\r\n            missingHour: showTzOpts && this.missingHour,\r\n        }).map(([key, val]) => val && key + ': ' + val).filter(s => s).join(', ');\r\n        return `${this.cronString} (${timezone})`;\r\n    }\r\n    nextDate(afterDate = new Date()) {\r\n        var _a;\r\n        const fromCronosDate = CronosDate.fromDate(afterDate, this.timezone);\r\n        if (((_a = this.timezone) === null || _a === void 0 ? void 0 : _a.fixedOffset) !== undefined) {\r\n            return this._next(fromCronosDate).date;\r\n        }\r\n        const fromTimestamp = afterDate.getTime(), fromLocalTimestamp = fromCronosDate['toUTCTimestamp'](), prevHourLocalTimestamp = CronosDate.fromDate(new Date(fromTimestamp - hourinms), this.timezone)['toUTCTimestamp'](), nextHourLocalTimestamp = CronosDate.fromDate(new Date(fromTimestamp + hourinms), this.timezone)['toUTCTimestamp'](), nextHourRepeated = nextHourLocalTimestamp - fromLocalTimestamp === 0, thisHourRepeated = fromLocalTimestamp - prevHourLocalTimestamp === 0, thisHourMissing = fromLocalTimestamp - prevHourLocalTimestamp === hourinms * 2;\r\n        if (this.skipRepeatedHour && thisHourRepeated) {\r\n            return this._next(fromCronosDate.copyWith({ minute: 59, second: 60 }), false).date;\r\n        }\r\n        if (this.missingHour === 'offset' && thisHourMissing) {\r\n            const nextDate = this._next(fromCronosDate.copyWith({ hour: fromCronosDate.hour - 1 })).date;\r\n            if (!nextDate || nextDate.getTime() > fromTimestamp)\r\n                return nextDate;\r\n        }\r\n        let { date: nextDate, cronosDate: nextCronosDate } = this._next(fromCronosDate);\r\n        if (this.missingHour !== 'offset' && nextCronosDate && nextDate) {\r\n            const nextDateNextHourTimestamp = nextCronosDate.copyWith({ hour: nextCronosDate.hour + 1 }).toDate(this.timezone).getTime();\r\n            if (nextDateNextHourTimestamp === nextDate.getTime()) {\r\n                if (this.missingHour === 'insert') {\r\n                    return nextCronosDate.copyWith({ minute: 0, second: 0 }).toDate(this.timezone);\r\n                }\r\n                // this.missingHour === 'skip'\r\n                return this._next(nextCronosDate.copyWith({ minute: 59, second: 59 })).date;\r\n            }\r\n        }\r\n        if (!this.skipRepeatedHour) {\r\n            if (nextHourRepeated && (!nextDate || (nextDate.getTime() > fromTimestamp + hourinms))) {\r\n                nextDate = this._next(fromCronosDate.copyWith({ minute: 0, second: 0 }), false).date;\r\n            }\r\n            if (nextDate && nextDate < afterDate) {\r\n                nextDate = new Date(nextDate.getTime() + hourinms);\r\n            }\r\n        }\r\n        return nextDate;\r\n    }\r\n    _next(date, after = true) {\r\n        const nextDate = this._nextYear(after ? date.copyWith({ second: date.second + 1 }) : date);\r\n        return {\r\n            cronosDate: nextDate,\r\n            date: nextDate ? nextDate.toDate(this.timezone) : null\r\n        };\r\n    }\r\n    nextNDates(afterDate = new Date(), n = 5) {\r\n        const dates = [];\r\n        let lastDate = afterDate;\r\n        for (let i = 0; i < n; i++) {\r\n            const date = this.nextDate(lastDate);\r\n            if (!date)\r\n                break;\r\n            lastDate = date;\r\n            dates.push(date);\r\n        }\r\n        return dates;\r\n    }\r\n    _nextYear(fromDate) {\r\n        let year = fromDate.year;\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            year = this.years.nextYear(year);\r\n            if (year === null)\r\n                return null;\r\n            nextDate = this._nextMonth((year === fromDate.year) ? fromDate : new CronosDate(year));\r\n            year++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextMonth(fromDate) {\r\n        let nextMonthIndex = findFirstFrom(fromDate.month, this.months);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextMonth = this.months[nextMonthIndex];\r\n            if (nextMonth === undefined)\r\n                return null;\r\n            nextDate = this._nextDay((nextMonth === fromDate.month) ? fromDate : new CronosDate(fromDate.year, nextMonth));\r\n            nextMonthIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextDay(fromDate) {\r\n        const days = this.days.getDays(fromDate.year, fromDate.month);\r\n        let nextDayIndex = findFirstFrom(fromDate.day, days);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextDay = days[nextDayIndex];\r\n            if (nextDay === undefined)\r\n                return null;\r\n            nextDate = this._nextHour((nextDay === fromDate.day) ? fromDate : new CronosDate(fromDate.year, fromDate.month, nextDay));\r\n            nextDayIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextHour(fromDate) {\r\n        let nextHourIndex = findFirstFrom(fromDate.hour, this.hours);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextHour = this.hours[nextHourIndex];\r\n            if (nextHour === undefined)\r\n                return null;\r\n            nextDate = this._nextMinute((nextHour === fromDate.hour) ? fromDate :\r\n                new CronosDate(fromDate.year, fromDate.month, fromDate.day, nextHour));\r\n            nextHourIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextMinute(fromDate) {\r\n        let nextMinuteIndex = findFirstFrom(fromDate.minute, this.minutes);\r\n        let nextDate = null;\r\n        while (!nextDate) {\r\n            const nextMinute = this.minutes[nextMinuteIndex];\r\n            if (nextMinute === undefined)\r\n                return null;\r\n            nextDate = this._nextSecond((nextMinute === fromDate.minute) ? fromDate :\r\n                new CronosDate(fromDate.year, fromDate.month, fromDate.day, fromDate.hour, nextMinute));\r\n            nextMinuteIndex++;\r\n        }\r\n        return nextDate;\r\n    }\r\n    _nextSecond(fromDate) {\r\n        const nextSecondIndex = findFirstFrom(fromDate.second, this.seconds), nextSecond = this.seconds[nextSecondIndex];\r\n        if (nextSecond === undefined)\r\n            return null;\r\n        return fromDate.copyWith({ second: nextSecond });\r\n    }\r\n}\r\n","const maxTimeout = Math.pow(2, 31) - 1;\r\nconst scheduledTasks = [];\r\nlet runningTimer = null;\r\nfunction addTask(task) {\r\n    if (task['_timestamp'] !== undefined) {\r\n        const insertIndex = scheduledTasks.findIndex(t => t['_timestamp'] < task['_timestamp']);\r\n        if (insertIndex >= 0)\r\n            scheduledTasks.splice(insertIndex, 0, task);\r\n        else\r\n            scheduledTasks.push(task);\r\n    }\r\n}\r\nfunction removeTask(task) {\r\n    const removeIndex = scheduledTasks.indexOf(task);\r\n    if (removeIndex >= 0)\r\n        scheduledTasks.splice(removeIndex, 1);\r\n    if (scheduledTasks.length === 0 && runningTimer) {\r\n        clearTimeout(runningTimer);\r\n        runningTimer = null;\r\n    }\r\n}\r\nfunction runScheduledTasks(skipRun = false) {\r\n    if (runningTimer)\r\n        clearTimeout(runningTimer);\r\n    const now = Date.now();\r\n    const removeIndex = scheduledTasks.findIndex(task => task['_timestamp'] <= now);\r\n    const tasksToRun = removeIndex >= 0 ? scheduledTasks.splice(removeIndex) : [];\r\n    for (let task of tasksToRun) {\r\n        if (!skipRun)\r\n            task['_runTask']();\r\n        if (task.isRunning) {\r\n            task['_updateTimestamp']();\r\n            addTask(task);\r\n        }\r\n    }\r\n    const nextTask = scheduledTasks[scheduledTasks.length - 1];\r\n    if (nextTask) {\r\n        runningTimer = setTimeout(runScheduledTasks, Math.min(nextTask['_timestamp'] - Date.now(), maxTimeout));\r\n    }\r\n    else\r\n        runningTimer = null;\r\n}\r\nexport function refreshSchedulerTimer() {\r\n    for (const task of scheduledTasks) {\r\n        task['_updateTimestamp']();\r\n        if (!task.isRunning)\r\n            removeTask(task);\r\n    }\r\n    scheduledTasks.sort((a, b) => b['_timestamp'] - a['_timestamp']);\r\n    runScheduledTasks(true);\r\n}\r\nclass DateArraySequence {\r\n    constructor(dateLikes) {\r\n        this._dates = dateLikes.map(dateLike => {\r\n            const date = new Date(dateLike);\r\n            if (isNaN(date.getTime()))\r\n                throw new Error('Invalid date');\r\n            return date;\r\n        }).sort((a, b) => a.getTime() - b.getTime());\r\n    }\r\n    nextDate(afterDate) {\r\n        const nextIndex = this._dates.findIndex(d => d > afterDate);\r\n        return nextIndex === -1 ? null : this._dates[nextIndex];\r\n    }\r\n}\r\nexport class CronosTask {\r\n    constructor(sequenceOrDates) {\r\n        this._listeners = {\r\n            'started': new Set(),\r\n            'stopped': new Set(),\r\n            'run': new Set(),\r\n            'ended': new Set(),\r\n        };\r\n        if (Array.isArray(sequenceOrDates))\r\n            this._sequence = new DateArraySequence(sequenceOrDates);\r\n        else if (typeof sequenceOrDates === 'string' ||\r\n            typeof sequenceOrDates === 'number' ||\r\n            sequenceOrDates instanceof Date)\r\n            this._sequence = new DateArraySequence([sequenceOrDates]);\r\n        else\r\n            this._sequence = sequenceOrDates;\r\n    }\r\n    start() {\r\n        if (!this.isRunning) {\r\n            this._updateTimestamp();\r\n            addTask(this);\r\n            runScheduledTasks();\r\n            if (this.isRunning)\r\n                this._emit('started');\r\n        }\r\n        return this;\r\n    }\r\n    stop() {\r\n        if (this.isRunning) {\r\n            this._timestamp = undefined;\r\n            removeTask(this);\r\n            this._emit('stopped');\r\n        }\r\n        return this;\r\n    }\r\n    get nextRun() {\r\n        return this.isRunning ? new Date(this._timestamp) : undefined;\r\n    }\r\n    get isRunning() {\r\n        return this._timestamp !== undefined;\r\n    }\r\n    _runTask() {\r\n        this._emit('run', this._timestamp);\r\n    }\r\n    _updateTimestamp() {\r\n        const nextDate = this._sequence.nextDate(new Date());\r\n        this._timestamp = nextDate ? nextDate.getTime() : undefined;\r\n        if (!this.isRunning)\r\n            this._emit('ended');\r\n    }\r\n    on(event, listener) {\r\n        this._listeners[event].add(listener);\r\n        return this;\r\n    }\r\n    off(event, listener) {\r\n        this._listeners[event].delete(listener);\r\n        return this;\r\n    }\r\n    _emit(event, ...args) {\r\n        this._listeners[event].forEach((listener) => {\r\n            listener.call(this, ...args);\r\n        });\r\n    }\r\n}\r\n","import { CronosExpression } from './expression';\r\nimport { CronosTask, refreshSchedulerTimer } from './scheduler';\r\nimport { CronosTimezone } from './date';\r\nexport function scheduleTask(cronString, task, options) {\r\n    const expression = CronosExpression.parse(cronString, options);\r\n    return new CronosTask(expression)\r\n        .on('run', task)\r\n        .start();\r\n}\r\nexport function validate(cronString, options) {\r\n    try {\r\n        CronosExpression.parse(cronString, options);\r\n    }\r\n    catch {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport { CronosExpression, CronosTask, CronosTimezone, refreshSchedulerTimer };\r\n"],"names":["sortAsc","a","b","flatMap","arr","mapper","reduce","acc","val","i","push","predefinedCronStrings","monthReplacements","monthReplacementRegex","RegExp","join","dayOfWeekReplacements","dayOfWeekReplacementRegex","maxValidYear","WarningType","_parse","cronstring","expr","trim","toLowerCase","fields","split","length","Error","unshift","SecondsOrMinutesField","HoursField","DaysField","MonthsField","YearsField","getIncrementLargerThanRangeWarnings","items","first","last","warnings","item","rangeLength","step","type","IncrementLargerThanRange","message","itemString","Field","constructor","field","parse","map","FieldItem","_items","values","getValues","Array","from","Set","sort","_a","_b","_c","_d","start","range","end","to","Math","floor","fill","_","any","undefined","single","allowCyclicRange","transformer","fieldItem","match","all","startFrom","parseInt","rangeStart","rangeEnd","x","n","asterisk","arguments","daysOfMonthField","daysOfWeekField","lastDay","lastWeekday","daysItems","nearestWeekdayItems","daysOfWeekItems","lastDaysOfWeekItems","nthDaysOfWeekItems","s","endsWith","slice","normalisedDaysOfWeekField","replace","indexOf","parseDayOfWeek","nthIndex","lastIndexOf","nth","test","DaysFieldValues","fromField","dayItems","weekItems","allDays","days","nearestWeekday","daysOfWeek","lastDaysOfWeek","nthDaysOfWeek","filterAnyItems","filter","nthDaysHashes","hash","has","add","getDays","year","month","lastDateOfMonth","Date","getDate","firstDayOfWeek","getDay","getNearestWeekday","day","dayOfWeek","weekday","nthOfMonth","nextYear","fromYear","years","ceil","CronosDate","hour","minute","second","fromDate","date","timezone","getFullYear","getMonth","getHours","getMinutes","getSeconds","toDate","fromUTCTimestamp","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","toUTCTimestamp","UTC","copyWith","ZoneCache","Map","CronosTimezone","IANANameOrOffset","fixedOffset","offsetMatch","get","dateTimeFormat","Intl","DateTimeFormat","hour12","timeZone","err","zoneName","currentYear","winterOffset","offset","summerOffset","set","toString","absOffset","abs","padStart","ts","nativeDateToCronosDate","asUTC","asTS","getTime","partsOffset","hackyOffset","cronosDateToNativeDate","provisionalOffset","UTCTimestamp","utcGuess","o2","o3","min","dtf","formatted","format","parsed","formatToParts","value","hourinms","findFirstFrom","list","findIndex","CronosExpression","cronString","seconds","minutes","hours","months","skipRepeatedHour","missingHour","_warnings","options","parsedFields","strict","warning","showTzOpts","Object","entries","tz","key","nextDate","afterDate","fromCronosDate","_next","fromTimestamp","fromLocalTimestamp","prevHourLocalTimestamp","nextHourLocalTimestamp","nextHourRepeated","thisHourRepeated","thisHourMissing","cronosDate","nextCronosDate","nextDateNextHourTimestamp","after","_nextYear","nextNDates","dates","lastDate","_nextMonth","nextMonthIndex","nextMonth","_nextDay","nextDayIndex","nextDay","_nextHour","nextHourIndex","nextHour","_nextMinute","nextMinuteIndex","nextMinute","_nextSecond","nextSecondIndex","nextSecond","maxTimeout","pow","scheduledTasks","runningTimer","addTask","task","insertIndex","t","splice","removeTask","removeIndex","clearTimeout","runScheduledTasks","skipRun","now","tasksToRun","isRunning","nextTask","setTimeout","refreshSchedulerTimer","DateArraySequence","dateLikes","_dates","dateLike","isNaN","nextIndex","d","CronosTask","sequenceOrDates","_listeners","isArray","_sequence","_updateTimestamp","_emit","stop","_timestamp","nextRun","_runTask","on","event","listener","off","delete","args","forEach","call","scheduleTask","expression","validate"],"mappings":"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"}